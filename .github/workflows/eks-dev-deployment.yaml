name: DEV EKS DEPLOYMENT

on:
  push:
    branches:
      - main
jobs:
  build_and_Deploy_EKS-DEV:
    runs-on: ubuntu-latest
    steps:
      # Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      # Install dependencies and build the project
      - name: npm install, build
        run: |
          ls -ltra
          if [ -f .env ]; then
          rm .env
          fi
          echo '${{ secrets.DEV_ENV }}' > .env
          ls -ltra
          yarn install
          yarn run build
          ls -ltra

      # Debugging steps (optional)
      - name: Show PWD
        run: echo "Current Working Directory:" && pwd
      - name: List Contents
        run: ls -lr

      # Create Dockerfile from secrets
      - name: Create Dockerfile
        run: |
          echo "${{ secrets.DOCKER_FILE_CONTENT_DEV }}" > dist/Dockerfile
          echo "Dockerfile created:"
          cp -r nginx.conf dist/
          

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Build and push Docker image
      - name: Build and Push Docker Image
        run: |
          IMAGE_NAME=${{ secrets.DOCKER_REPO_NAME_DEV }}
          IMAGE_TAG=${{ secrets.DOCKER_IMAGE_DEV }}
          cd dist/ || docker build -t $IMAGE_NAME:$IMAGE_TAG .
          docker push $IMAGE_NAME:$IMAGE_TAG
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      # Update EKS Deployment
      - name: Update EKS Deployment
        run: |
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          export AWS_REGION=${{ secrets.AWS_REGION }}
          
          # Set kubectl configuration
          aws eks update-kubeconfig --region $AWS_REGION --name ${{ secrets.EKS_CLUSTER_NAME_DEV }}

          # Restart the deployment
          kubectl rollout restart deployment/${{ secrets.EKS_DEPLOYMENT_NAME_DEV }}
          # Verify the restart
          kubectl rollout status deployment/${{ secrets.EKS_DEPLOYMENT_NAME_DEV }}
